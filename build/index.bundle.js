!function(e){function t(r){if(n[r])return n[r].exports;var o=n[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,t),o.l=!0,o.exports}var n={};t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:r})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=0)}([function(e,t,n){"use strict";var r=n(1),o=function(e){return e&&e.__esModule?e:{default:e}}(r);if(window.PaymentRequest){var u=document.createElement("input"),a=document.createElement("button");u.classList.add("js-payment-amount"),a.textContent="Pay",document.querySelector("body").appendChild(u),document.querySelector("body").appendChild(a),a.addEventListener("click",function(){return new o.default(u.value)})}else{var i=document.createElement("div"),c=document.createElement("a"),l=document.querySelector("body");c.href="https://web-payment-apis.appspot.com/",c.textContent="Maybe you will try apple pay?",i.textContent="No support",l.appendChild(i),l.appendChild(c)}},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),u=function(){function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"RUB",o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:["basic-card"];r(this,e),this.value=t,this.currency=n,this.supportedMethods=o,this.init()}return o(e,[{key:"init",value:function(){var e=this.configure(),t=e.paymentMethods,n=e.paymentDetails,r=e.options;new PaymentRequest(t,n,r).show().then(function(e){return console.log(e)}).catch(function(e){return console.log("Error: ",e)})}},{key:"configure",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.value,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.currency;return{paymentMethods:[{supportedMethods:arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.supportedMethods}],paymentDetails:{total:{label:"Diz maney",amount:{currency:t,value:e}},displayItems:[{label:"Discount",amount:{currency:t,value:-5}}]},options:{requestPayerName:!0,requestPayerEmail:!0}}}}]),e}();t.default=u}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,